version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_SERVER_URL=http://116.203.198.150:5000
    depends_on:
      - backend
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - SECRET_KEY=gfgd@43435sdfggpp[[gdsf
      - NODE_ENV=production
      - DATABASE_HOST=db
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=12345678
      - DATABASE_NAME=yachts
      - DATABASE_PORT=5432
      - SERVER_URL=http://116.203.198.150:5000
      - ZOHO_APP_PASSWORD=fV3U2ZA#u4:6$Gg
      - ZOHO_EMAIL=kirill.hetman@zohomail.eu
    depends_on:
      - db
    restart: always
    volumes:
      - uploads_data:/app/uploads
    command: >
      sh -c "mkdir -p /app/uploads/image /app/uploads/video /app/uploads/logo &&
             chmod -R 777 /app/uploads &&
             npm run start"

  db:
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: yachts
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backups:/backups
    command: >
      sh -c "
        echo '#!/bin/bash' > /backup.sh &&
        echo 'pg_dump -U postgres -d yachts --clean --if-exists --no-owner --no-privileges > /backups/backup_\$(date +%Y%m%d_%H%M%S).sql' >> /backup.sh &&
        chmod +x /backup.sh &&
        echo '0 2 * * * /backup.sh' > /etc/cron.d/backup-cron &&
        chmod 0644 /etc/cron.d/backup-cron &&
        crontab /etc/cron.d/backup-cron &&
        cron -f &
        docker-entrypoint.sh postgres"

  backup:
    image: postgres:15
    restart: always
    depends_on:
      - db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: yachts
      PGHOST: db
      PGPORT: 5432
      PGPASSWORD: 12345678
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backups:/backups
    command: >
      sh -c "
        echo '#!/bin/bash' > /backup.sh &&
        echo 'pg_dump -h db -U postgres -d yachts --clean --if-exists --no-owner --no-privileges > /backups/backup_\$(date +%Y%m%d_%H%M%S).sql' >> /backup.sh &&
        chmod +x /backup.sh &&
        echo '0 2 * * * /backup.sh' > /etc/cron.d/backup-cron &&
        chmod 0644 /etc/cron.d/backup-cron &&
        crontab /etc/cron.d/backup-cron &&
        cron -f"

volumes:
  postgres_data:
  uploads_data:
  backup_data: